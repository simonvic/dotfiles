#!/bin/bash
###########################################
#	Made by
#       _                              _
#      (_)                            (_)
#  ___  _  ____    ___   ____   _   _  _   ____
# /___)| ||    \  / _ \ |  _ \ | | | || | / ___)
#|___ || || | | || |_| || | | | \ V / | |( (___
#(___/ |_||_|_|_| \___/ |_| |_|  \_/  |_| \____)

#	Check updates and give a look at my dotfiles here:
#		https://github.com/simonvic/dotfiles

###########################################

# Max limit of mic capture level
maxVolume=100

#	Default icon
mutedIcon=/usr/share/icons/Vimix-Ruby/22/panel/microphone-sensitivity-muted.svg
lowIcon=/usr/share/icons/Vimix-Ruby/22/panel/microphone-sensitivity-low.svg
icon=/usr/share/icons/Vimix-Ruby/22/panel/microphone-sensitivity-medium.svg
warningIcon=/usr/share/icons/Vimix-Ruby/22/panel/microphone-sensitivity-high.svg

# Enable to play sound
playSound=true
# Sound to play (usually located in /usr/share/sounds/)
sound=/usr/share/sounds/freedesktop/stereo/audio-volume-change.oga

# Default urgency level [Available: low, normal, critical]
urgency=normal

# At which level you are controlling the boost and not intput volume anymore
warningLevel=60

# For how much milliseconds the notification will stay visible
timeout=1500

# Unique dunst notification id
uid=6904

# App name in dunst
appName="simonvic.Microphone"

function getVolume() {
	pactl get-source-volume @DEFAULT_SOURCE@ | head -n1 | cut -d '/' -f 2 | sed 's|%||'
}

function isMute() {
	[[ $(pactl get-source-mute @DEFAULT_SOURCE@) == "Mute: yes" ]] && echo true || echo false
}

function setMute() {
	pactl set-source-mute @DEFAULT_SOURCE@ "$1"
}

function increaseVolume() {
	setMute false
	local increaseAmount=$1
	local currentVolume=$(getVolume)
	[[ $((currentVolume + increaseAmount)) -gt $maxVolume ]] \
		&& setVolume "$maxVolume%" \
		|| setVolume "+$increaseAmount%"
}

function decreaseVolume() {
	setMute false
	setVolume "-$1%"
}

function setVolume() {
	pactl set-source-volume @DEFAULT_SOURCE@ "$1"
}

function buildBar() {
	$HOME/.config/i3/scripts/drawBar.sh $1 $2 $3
}

function sendNotification() {
	local volume=$(getVolume)

	# Building the volume bar
	body="$(buildBar 5 $volume false)\t<b>$volume%</b>\t"

	if [ $volume -ge $warningLevel ]; then
		urgency=critical
		icon=$warningIcon
	elif [ $volume -le 20 ]; then
		icon=$lowIcon
	fi

	if [ $playSound = true ]; then
		paplay $sound &
	fi

	# Send the notification
	dunstify -a "$appName" -i "$icon" -t "$timeout" -r "$uid" -u "$urgency" "$volume" "$body"
}

function printUsage() {
	printf "
- Usage
	sMicrophonectl <options>
	
- Options
	help                     # Show this help
	increase [amount]        # Increase input volume by [amount] if specified or the default value otherwise
	decrease [amount]        # Decrease input volume by [amount] if specified or the default value otherwise
	mute [true|false|toggle] # Set mute status for the microphone

- Abbreviations
	i = increase
	d = decrease
	m = mute
"
}

case $1 in
increase | i)
	increaseVolume "$2"
	sendNotification
	;;
decrease | d)
	decreaseVolume "$2"
	sendNotification
	;;
mute | m)
	setMute "$2"
	if $(isMute); then
		# Building the volume bar
		body="$(buildBar 5 100 true)\t<b>Muted</b>\t"
		dunstify -a "$appName" -i $mutedIcon -t "$timeout" -r "$uid" -u "$urgency" "Muted" "$body"
	else
		sendNotification
	fi
	;;
help | *) printUsage ;;
esac
