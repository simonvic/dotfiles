#!/bin/bash

###############################################################################
#	Made by
#       _                              _
#      (_)                            (_)
#  ___  _  ____    ___   ____   _   _  _   ____
# /___)| ||    \  / _ \ |  _ \ | | | || | / ___)
#|___ || || | | || |_| || | | | \ V / | |( (___
#(___/ |_||_|_|_| \___/ |_| |_|  \_/  |_| \____)
#
#	Check updates and give a look at my dotfiles here:
#		https://github.com/simonvic/dotfiles
#
###############################################################################

notificationUID=6908
notificationAppName="simonvic.TODO"
notificationSound="/usr/share/sounds/freedesktop/stereo/audio-volume-change.oga"
notificationUrgency=normal
notificationTimeoutMS=0
notificationIcon=accessories-clipboard

notificationBarLength=20
notificationBarStep=5
notificationBarChars="█;▆;▅;▃;▁;░"
notificationBarBorders=";;;;;;;"

dmenu_theme="simonvic/glass/notification_actions"

# Max length of body in the notification
maxLength=15

# where to store todo file
todoFile=${XDG_DATA_HOME:-$HOME/.local/share}/simonvic/todo/todo.csv

doneSymbol=
todoSymbol=
deletedSymbol= #
header="
··················································
··················································
████████╗ ██████╗       ██████╗  ██████╗ 
╚══██╔══╝██╔═══██╗      ██╔══██╗██╔═══██╗
   ██║   ██║   ██║█████╗██║  ██║██║   ██║
   ██║   ██║   ██║╚════╝██║  ██║██║   ██║
   ██║   ╚██████╔╝      ██████╔╝╚██████╔╝
   ╚═╝    ╚═════╝       ╚═════╝  ╚═════╝ 
··················································
"

###############################################################################

usercfg=${XDG_CONFIG_HOME:-$HOME/.config}/dotfiles/${0##*/}.sh
[[ -e "$usercfg" ]] && source "$usercfg"

###############################################################################


printUsage() {
	printf "%s\n" "
- Usage
	todo [options]

- Options
	help   show this help

	# Query commands
	list [done|todo|deleted] [name]    # List with filters
		done                              # List things done
		todo                              # List things still to do
		deleted                           # List things cancelled

	# Edit commands
	new <name>                         # Add a new thing to do with name <name>
	do <id>                            # Mark it done
	undo <id>                          # Mark it undone
	delete <id>                        # Mark it deleted
	edit                               # Edit manually the todo list

	# Other
	notification [done|todo|deleted]   # Show todo list in a notification
"
}

##
# @param todo status (done|todo|deleted) or empty
# @return count
function getCount() {
	grep "^[0-9]\+,$1" "$todoFile" | wc -l
}

function prettifyList() {
	while IFS=, read id status description; do
		case "$status" in
			todo) status=$todoSymbol ;;
			done) status=$doneSymbol ;;
			deleted) status=$deletedSymbol ;;
		esac
		printf "%s [%s] %s\n" "$status" "$id" "$description"
	done < /dev/stdin
}

##
# @param todo status (done|todo|deleted) or empty
# @param description or empty
# @return count
function list() {
	grep "^[0-9]\+,$1" "$todoFile" | grep "$2"
}

##
# @param Description
function addNew() {
	if [[ -z "$1" ]]; then
		printUsage
	else
		local newID=$(($(tail -n 1 "$todoFile" | cut -d "," -f1) + 1))
		echo "$newID,todo,$1" >> "$todoFile"
	fi
}

##
# @param status (done|todo|deleted)
# @param id
function mark() {
	sed -i "s/^$2,\w\+,\(.*\)/$2,$1,\1/g" "$todoFile"
}

function editFile() {
	xdg-open "$todoFile" &
}

function buildBar() {
	DrawBar.sh                               \
		--length $notificationBarLength      \
		--step $notificationBarStep          \
		--value $1                           \
		--bar-chars "$notificationBarChars"  \
		--borders "$notificationBarBorders"
}
##
# @param status (done|todo|deleted)
# @param description or empty
function sendNotification() {
	local doneCount=$(getCount done "$2")
	local todoCount=$(getCount todo "$2")
	local deletedCount=$(getCount deleted "$2")
	local totalCount=$(getCount)
	local todoPercent=$((doneCount * 100 / (totalCount - deletedCount)))
	# If the list is too big cut it
	local length=$(getCount "$1" "$2")
	local list=$(list "$1" "$2" | head -$maxLength | prettifyList)
	local body="\n<small>$list"
	if [[ $length -ge $maxLength ]]; then
		body+="\n... $(($length - $maxLength)) more\n"
	fi
	body+="</small>\n"
	body+="\n$(buildBar $todoPercent) $todoPercent%\n"
	body+="<b>$todoSymbol $todoCount</b> todo <b>│</b> <b>$doneSymbol $doneCount</b> done <b>│</b> <b>$deletedSymbol $deletedCount</b> deleted <b>│</b> <b> $totalCount</b> total"
	

	[[ -n "$notificationSound" ]] && paplay "$notificationSound" --server /run/user/1000/pulse/native &
	local choice=$(notify-send \
		--app-name "$notificationAppName" \
		--hint "string:x-canonical-private-synchronous:$notificationAppName" \
		--icon "$notificationIcon" \
		--expire-time "$notificationTimeoutMS" \
		--urgency "$notificationUrgency" \
		--action "listAll=  List all" \
		--action "listDone=  List done" \
		--action "listTodo=  List to do" \
		--action "listDeleted=  List deleted" \
		--action "todoHelp= ? TODO help" \
		--action "edit=  Edit the todo list" \
		"sTodo" "$body")

	case "$choice" in
		edit) editFile ;;
		listAll) i3-sensible-terminal -e "sTodo list" --hold ;;
		listDone) i3-sensible-terminal -e "sTodo list done" --hold ;;
		listTodo) i3-sensible-terminal -e "sTodo list todo" --hold ;;
		listDeleted) i3-sensible-terminal -e "sTodo list deleted" --hold ;;
		todoHelp) i3-sensible-terminal -e "sTodo help" --hold ;;
	esac
}

function createTodoFile() {
	mkdir -p "${todoFile%/*}"
	echo "0,todo,Check out https://github.com/simonvic/dotfiles" >> $todoFile
	echo "1,todo,Give a star to https://github.com/simonvic/dotfiles" >> $todoFile
}

[[ ! -e "$todoFile" ]] && createTodoFile

case "$1" in
	"list") list "$2" "$3" | prettifyList ;;
	"count") getCount "$2" "$3" ;;
	"new") addNew "$2" ;;
	"do") mark done "$2" ;;
	"undo") mark todo "$2" ;;
	"delete") mark deleted "$2" ;;
	"edit") editFile ;;
	"notification") sendNotification "$2" "$3" ;;
	"help") printUsage ;;
	*)
		printf "%s\n" "$header"
		list todo | prettifyList
		;;
esac
